openapi: 3.0.1
info:
  title: HubSpot CRM API
  description: 'Allows an app to extend the CRM UI by surfacing custom cards in the sidebar of record pages. These cards are defined up-front as part of app configuration, then populated by external data fetch requests when the record page is accessed by a user.'
  version: v3
  x-hubspot-product-tier-requirements:
    marketing: FREE
    sales: FREE
    service: FREE
    cms: FREE
servers:
  - url: https://api.hubapi.com
tags:
  - name: Basic
paths:
  /crm/v3/objects/contacts:
    post:
      tags:
        - Basic
      summary: Post
      description: Create a contact with the given properties and return a copy of the object, including the ID. Documentation and examples for creating standard contacts are provided.
      operationId: contacts
      parameters: [ ]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SimplePublicObjectInputForCreate'
        required: true
      responses:
        '201':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimplePublicObject'
        default:
          $ref: '#/components/responses/Error'
      security:
        - oauth2:
            - crm.objects.contacts.write
        - private_apps:
            - crm.objects.contacts.write

  /crm/v3/objects/contacts/{contactId}:
    delete:
      tags:
        - Basic
      summary: Delete
      description: Move an Object identified by `{contactId}` to the recycling bin.
      operationId: contacts
      parameters:
        - name: contactId
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        '204':
          description: No content
          content: { }
        default:
          $ref: '#/components/responses/Error'
      security:
        - oauth2:
            - crm.objects.contacts.write
        - private_apps:
            - crm.objects.contacts.write
    patch:
      tags:
        - "Basic"
      summary: Patch
      description: "Perform a partial update of an Object identified by `{contactId}`. `{contactId}` refers to the internal object ID. Provided property values will be overwritten. Read-only and non-existent properties result in an error. Properties values can be cleared by passing an empty string."
      operationId: contacts
      parameters:
        - name: "contactId"
          in: "path"
          required: true
          style: "simple"
          explode: false
          schema:
            type: "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SimplePublicObjectInput"
        required: true
      responses:
        "200":
          description: "successful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SimplePublicObject"
        default:
          $ref: "#/components/responses/Error"
      security:
        - oauth2:
            - "crm.objects.contacts.write"
        - private_apps:
            - "crm.objects.contacts.write"
    get:
      tags:
        - Basic
      summary: Get
      description: Read an Object identified by `{contactId}`and `{emailId}`. It refers to the internal object ID.
      operationId: contacts
      parameters:
        - name: contactId
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimplePublicObjectWithAssociations'
        default:
          $ref: '#/components/responses/Error'
      security:
        - oauth2:
            - crm.objects.contacts.read
        - private_apps:
            - crm.objects.contacts.read
  /crm/v3/objects/contacts/search:
    post:
      tags:
        - Basic
      summary: Query
      description: a contacts search will return createDate, email, firstname, hs_object_id, lastModifiedDate, and lastname by default. To return a specific set of properties, include a properties array in the request body.
      operationId: contacts
      parameters: [ ]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PublicObjectSearchRequest'
        required: true
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicObjectSearchRequest'
        default:
          $ref: '#/components/responses/Error'
      security:
        - oauth2:
            - crm.objects.contacts.read
        - private_apps:
            - crm.objects.contacts.read
  /crm/v3/objects/companies:
    post:
      tags:
        - Basic
      summary: Post
      description: Create a company with the given properties and return a copy of the object, including the ID. Documentation and examples for creating standard companies is provided.
      operationId: companies
      parameters: [ ]
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SimplePublicObjectInputForCreate"
        required: true
      responses:
        "201":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SimplePublicObject"
        default:
          $ref: "#/components/responses/Error"
      security:
        - oauth2:
            - "crm.objects.companies.write"
        - private_apps:
            - "crm.objects.companies.write"
  /crm/v3/objects/companies/{companyId}:
    delete:
      tags:
        - Basic
      summary: Delete
      description: Move an Object identified by `{companyId}` to the recycling bin.
      operationId: companies
      parameters:
        - name: companyId
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        '204':
          description: No content
          content: { }
        default:
          $ref: '#/components/responses/Error'
      security:
        - oauth2:
            - crm.objects.companies.write
        - private_apps:
            - crm.objects.companies.write
    patch:
      tags:
        - Basic
      summary: Patch
      description: >
        Perform a partial update of an Object identified by `{companyId}`or optionally a unique property value as specified by the `idProperty` query param. `{companyId}` refers to the internal object ID by default, and the `idProperty` query param refers to a property whose values are unique for the object. Provided property values will be overwritten. Read-only and non-existent properties will result in an error. Properties values can be cleared by passing an empty string.
      operationId: companies
      parameters:
        - name: companyId
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: idProperty
          in: query
          description: The name of a property whose values are unique for this object
          required: false
          style: form
          explode: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SimplePublicObjectInput'
        required: true
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimplePublicObject'
        default:
          $ref: '#/components/responses/Error'
      security:
        - oauth2:
            - crm.objects.companies.write
        - private_apps:
            - crm.objects.companies.write
    get:
      tags:
        - Basic
      summary: GET
      description: Read an Object identified by `{companyId}`. `{companyId}` refers to the internal object ID by default, or optionally any unique property value as specified by the `idProperty` query param.  Control what is returned via the `properties` query param.
      operationId: companies
      parameters:
        - name: companyId
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimplePublicObjectWithAssociations'
        default:
          $ref: '#/components/responses/Error'
      security:
        - oauth2:
            - crm.objects.companies.read
        - private_apps:
            - crm.objects.companies.read
  /crm/v3/objects/companies/search:
    post:
      tags:
        - Basic
      summary: Query
      description: a companies search will return createDate, domain, hs_object_id, lastModifiedDate, and name by default. To return a specific set of properties, include a properties array in the request body.
      operationId: companies
      parameters: [ ]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PublicObjectSearchRequest'
        required: true
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicObjectSearchRequest'
        default:
          $ref: '#/components/responses/Error'
      security:
        - oauth2:
            - crm.objects.companies.read
        - private_apps:
            - crm.objects.companies.read
  /crm/v3/objects/tickets:
    post:
      tags:
        - Basic
      summary: Post
      description: Create a ticket with the given properties and return a copy of the object, including the ID. Documentation and examples for creating standard tickets is provided.
      operationId: tickets
      parameters: [ ]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SimplePublicObjectInputForCreate'
        required: true
      responses:
        '201':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimplePublicObject'
        default:
          $ref: '#/components/responses/Error'
      security:
        - oauth2_legacy:
            - tickets
        - private_apps_legacy:
            - tickets
  /crm/v3/objects/tickets/{ticketId}:
    delete:
      tags:
        - Basic
      summary: Delete
      description: Move an Object identified by `{ticketId}` to the recycling bin.
      operationId: tickets
      parameters:
        - name: ticketId
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        "204":
          description: No content
          content: { }
        default:
          $ref: "#/components/responses/Error"
      security:
        - oauth2_legacy:
            - tickets
        - private_apps_legacy:
            - tickets
    patch:
      tags:
        - Basic
      summary: Patch
      description: Perform a partial update of an Object identified by {ticketId}or optionally a unique property value as specified by the idProperty query param. {ticketId} refers to the internal object ID by default, and the idProperty query param refers to a property whose values are unique for the object. Provided property values will be overwritten. Read-only and non-existent properties will result in an error. Properties values can be cleared by passing an empty string.
      operationId: tickets
      parameters:
        - name: ticketId
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SimplePublicObjectInput'
        required: true
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimplePublicObject'
        default:
          $ref: '#/components/responses/Error'
      security:
        - oauth2:
            - tickets
        - private_apps:
            - tickets
    get:
      tags:
        - Basic
      summary: GET
      description: Read an Object identified by {ticketId}. {ticketId} refers to the internal object ID by default, or optionally any unique property value as specified by the idProperty query param. Control what is returned via the properties query param.
      operationId: tickets
      parameters:
        - name: ticketId
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SimplePublicObjectInput'
        required: true
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimplePublicObject'
        default:
          $ref: '#/components/responses/Error'
      security:
        - oauth2:
            - tickets
        - private_apps:
            - tickets
  /crm/v3/objects/tickets/search:
    post:
      tags:
        - Basic
      summary: Query
      description: a contacts search will return content, hs_pipeline, hs_pipeline_stage,hs_ticket_category, hs_ticket_priority, subject,createDate, hs_lastModifiedDate, hs_object_id. To return a specific set of properties, include a properties array in the request body.
      operationId: tickets
      parameters: [ ]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PublicObjectSearchRequest'
        required: true
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicObjectSearchRequest'
        default:
          $ref: '#/components/responses/Error'
      security:
        - oauth2:
            - tickets
        - private_apps:
            - tickets
  /crm/v3/objects/deals:
    post:
      tags:
        - Basic
      summary: Post
      description: Create a deal with the given properties and return a copy of the object, including the ID. Documentation and examples for creating standard deals is provided.
      operationId: deals
      parameters: [ ]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SimplePublicObjectInputForCreate'
        required: true
      responses:
        '201':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimplePublicObject'
        default:
          $ref: '#/components/responses/Error'
      security:
        - oauth2:
            - crm.objects.deals.write
        - private_apps:
            - crm.objects.deals.write
  /crm/v3/objects/deals/{dealId}:
    delete:
      tags:
        - Basic
      summary: Delete
      description: Move an Object identified by `{dealId}` to the recycling bin.
      operationId: deals
      parameters:
        - name: dealId
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        "204":
          description: No content
          content: { }
        default:
          $ref: "#/components/responses/Error"
      security:
        - oauth2:
            - crm.objects.deals.write
        - private_apps:
            - crm.objects.deals.write
    patch:
      tags:
        - Basic
      summary: Patch
      description: >
        Perform a partial update of an Object identified by `{dealId}`. `{dealId}` refers to the internal object ID by default, or optionally any unique property value as specified by the `idProperty` query param. Provided property values will be overwritten. Read-only and non-existent properties will be ignored. Properties values can be cleared by passing an empty string.
      operationId: deals
      parameters:
        - name: dealId
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: idProperty
          in: query
          description: The name of a property whose values are unique for this object
          required: false
          style: form
          explode: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SimplePublicObjectInput'
        required: true
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimplePublicObject'
        default:
          $ref: '#/components/responses/Error'
      security:
        - oauth2:
            - crm.objects.deals.write
        - private_apps:
            - crm.objects.deals.write
    get:
      tags:
        - Basic
      summary: GET
      description: Read an Object identified by `{dealId}`. `{dealId}` refers to the internal object ID by default, or optionally any unique property value as specified by the `idProperty` query param. Control what is returned via the `properties` query param.
      operationId: deals
      parameters:
        - name: dealId
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimplePublicObjectWithAssociations'
        default:
          $ref: '#/components/responses/Error'
      security:
        - oauth2:
            - crm.objects.deals.read
        - private_apps:
            - crm.objects.deals.read
  /crm/v3/objects/deals/search:
    post:
      tags:
        - Basic
      summary: QUERY
      description: a deals search will return dealName, amount, closeDate, pipeline,dealsTage, createDate, hsLastModifiedDate, hs_object_id. To return a specific set of properties, include a properties array in the request body.
      operationId: deals
      parameters: [ ]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PublicObjectSearchRequest'
        required: true
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionResponseWithTotalSimplePublicObjectForwardPaging'
        default:
          $ref: '#/components/responses/Error'
      security:
        - oauth2:
            - crm.objects.deals.read
        - private_apps:
            - crm.objects.deals.read
  /crm/v3/objects/goal_targets/{goalTargetId}:
    get:
      tags:
        - Basic
      summary: GET
      description: Read an Object identified by `{goalTargetId}`. `{goalTargetId}` refers to the internal object ID by default.
      operationId: goals
      parameters:
        - name: goalTargetId
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SimplePublicObjectWithAssociations"
        default:
          $ref: "#/components/responses/Error"
      security:
        - oauth2:
            - crm.objects.goals.read
        - private_apps:
            - crm.objects.goals.read
  /crm/v3/objects/goal_targets/search:
    post:
      tags:
        - Basic
      summary: QUERY
      description: a goals search will return hsCreateDate, hsLastModifiedDate, hs_object_id. To return a specific set of properties, include a properties array in the request body.
      operationId: goals
      parameters: [ ]
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PublicObjectSearchRequest"
        required: true
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CollectionResponseWithTotalSimplePublicObjectForwardPaging"
        default:
          $ref: "#/components/responses/Error"
      security:
        - oauth2:
            - crm.objects.goals.read
        - private_apps:
            - crm.objects.goals.read
components:
  schemas:
    StandardError:
      required:
        - category
        - context
        - errors
        - links
        - message
        - status
      type: object
      properties:
        subCategory:
          type: object
          properties: { }
        context:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
        links:
          type: object
          additionalProperties:
            type: string
        id:
          type: string
        category:
          type: string
        message:
          type: string
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
        status:
          type: string
    CollectionResponseAssociatedId:
      required:
        - results
      type: object
      properties:
        paging:
          $ref: '#/components/schemas/Paging'
        results:
          type: array
          items:
            $ref: '#/components/schemas/AssociatedId'
    PublicAssociationsForObject:
      type: object
      properties:
        types:
          type: array
          items:
            $ref: '#/components/schemas/AssociationSpec'
        to:
          $ref: '#/components/schemas/PublicObjectId'
    BatchResponseSimplePublicObject:
      required:
        - completedAt
        - results
        - startedAt
        - status
      type: object
      properties:
        completedAt:
          type: string
          format: date-time
        requestedAt:
          type: string
          format: date-time
        startedAt:
          type: string
          format: date-time
        links:
          type: object
          additionalProperties:
            type: string
        results:
          type: array
          items:
            $ref: '#/components/schemas/SimplePublicObject'
        status:
          type: string
          enum:
            - PENDING
            - PROCESSING
            - CANCELED
            - COMPLETE
    FilterGroup:
      required:
        - filters
      type: object
      properties:
        filters:
          type: array
          items:
            $ref: '#/components/schemas/Filter'
    ErrorDetail:
      required:
        - message
      type: object
      properties:
        subCategory:
          type: string
          description: A specific category that contains more specific detail about the error
        code:
          type: string
          description: The status code associated with the error detail
        in:
          type: string
          description: The name of the field or parameter in which the error was found.
        context:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          description: Context about the error condition
          example:
            missingScopes:
              - scope1
              - scope2
        message:
          type: string
          description: A human readable message describing the error along with remediation steps where appropriate
    ForwardPaging:
      type: object
      properties:
        next:
          $ref: '#/components/schemas/NextPage'
    SimplePublicObjectId:
      required:
        - id
      type: object
      properties:
        id:
          type: string
    BatchReadInputSimplePublicObjectId:
      required:
        - inputs
        - properties
        - propertiesWithHistory
      type: object
      properties:
        propertiesWithHistory:
          type: array
          items:
            type: string
        idProperty:
          type: string
        inputs:
          type: array
          items:
            $ref: '#/components/schemas/SimplePublicObjectId'
        properties:
          type: array
          items:
            type: string
    BatchInputSimplePublicObjectId:
      required:
        - inputs
      type: object
      properties:
        inputs:
          type: array
          items:
            $ref: '#/components/schemas/SimplePublicObjectId'
    ValueWithTimestamp:
      required:
        - sourceType
        - timestamp
        - value
      type: object
      properties:
        sourceId:
          type: string
        sourceType:
          type: string
        sourceLabel:
          type: string
        updatedByUserId:
          type: integer
          format: int32
        value:
          type: string
        timestamp:
          type: string
          format: date-time
    BatchInputSimplePublicObjectBatchInputUpsert:
      required:
        - inputs
      type: object
      properties:
        inputs:
          type: array
          items:
            $ref: '#/components/schemas/SimplePublicObjectBatchInputUpsert'
    CollectionResponseWithTotalSimplePublicObjectForwardPaging:
      required:
        - results
        - total
      type: object
      properties:
        total:
          type: integer
          format: int32
        paging:
          $ref: '#/components/schemas/ForwardPaging'
        results:
          type: array
          items:
            $ref: '#/components/schemas/SimplePublicObject'
    SimplePublicObject:
      required:
        - createdAt
        - id
        - properties
        - updatedAt
      type: object
      properties:
        createdAt:
          type: string
          format: date-time
        archived:
          type: boolean
          example: false
        archivedAt:
          type: string
          format: date-time
        propertiesWithHistory:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/ValueWithTimestamp'
        id:
          type: string
          example: '512'
        properties:
          type: object
          additionalProperties:
            type: string
            nullable: true
          example:
            property_date: '1572480000000'
            property_radio: option_1
            property_number: '17'
            property_string: value
            property_checkbox: 'false'
            property_dropdown: choice_b
            property_multiple_checkboxes: chocolate;strawberry
        updatedAt:
          type: string
          format: date-time
      example:
        id: '512'
        properties:
          company: Biglytics
          createdate: '2019-10-30T03:30:17.883Z'
          email: bcooper@biglytics.net
          firstname: Bryan
          lastmodifieddate: '2019-12-07T16:50:06.678Z'
          lastname: Cooper
          phone: (877) 929-0687
          website: biglytics.net
        createdAt: '2019-10-30T03:30:17.883Z'
        updatedAt: '2019-12-07T16:50:06.678Z'
        archived: false
    PublicObjectId:
      type: object
      properties:
        id:
          type: string
    Paging:
      type: object
      properties:
        next:
          $ref: '#/components/schemas/NextPage'
        prev:
          $ref: '#/components/schemas/PreviousPage'
    PublicObjectSearchRequest:
      required:
        - after
        - filterGroups
        - limit
        - properties
        - sorts
      type: object
      properties:
        query:
          type: string
        limit:
          type: integer
          format: int32
        after:
          type: string
        sorts:
          type: array
          items:
            type: string
        properties:
          type: array
          items:
            type: string
        filterGroups:
          type: array
          items:
            $ref: '#/components/schemas/FilterGroup'
    Error:
      required:
        - category
        - correlationId
        - message
      type: object
      properties:
        subCategory:
          type: string
          description: A specific category that contains more specific detail about the error
        context:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          description: Context about the error condition
          example:
            missingScopes:
              - scope1
              - scope2
            invalidPropertyName:
              - propertyValue
        correlationId:
          type: string
          description: A unique identifier for the request. Include this value with any error reports or support tickets
          format: uuid
          example: aeb5f871-7f07-4993-9211-075dc63e7cbf
        links:
          type: object
          additionalProperties:
            type: string
          description: A map of link names to associated URIs containing documentation about the error or recommended remediation steps
          example:
            knowledge-base: https://www.hubspot.com/products/service/knowledge-base
        message:
          type: string
          description: A human readable message describing the error along with remediation steps where appropriate
          example: Invalid input (details will vary based on the error)
        category:
          type: string
          description: The error category
          example: VALIDATION_ERROR
        errors:
          type: array
          description: further information about the error
          items:
            $ref: '#/components/schemas/ErrorDetail'
      example:
        message: Invalid input (details will vary based on the error)
        correlationId: aeb5f871-7f07-4993-9211-075dc63e7cbf
        category: VALIDATION_ERROR
        links:
          knowledge-base: https://www.hubspot.com/products/service/knowledge-base
    SimplePublicObjectBatchInputUpsert:
      required:
        - id
        - properties
      type: object
      properties:
        idProperty:
          type: string
        id:
          type: string
        properties:
          type: object
          additionalProperties:
            type: string
    BatchResponseSimplePublicObjectWithErrors:
      required:
        - completedAt
        - results
        - startedAt
        - status
      type: object
      properties:
        completedAt:
          type: string
          format: date-time
        numErrors:
          type: integer
          format: int32
        requestedAt:
          type: string
          format: date-time
        startedAt:
          type: string
          format: date-time
        links:
          type: object
          additionalProperties:
            type: string
        results:
          type: array
          items:
            $ref: '#/components/schemas/SimplePublicObject'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/StandardError'
        status:
          type: string
          enum:
            - PENDING
            - PROCESSING
            - CANCELED
            - COMPLETE
    PublicGdprDeleteInput:
      required:
        - objectId
      type: object
      properties:
        idProperty:
          type: string
        objectId:
          type: string
    SimplePublicObjectInput:
      required:
        - properties
      type: object
      properties:
        properties:
          type: object
          additionalProperties:
            type: string
          example:
            property_date: '1572480000000'
            property_radio: option_1
            property_number: '17'
            property_string: value
            property_checkbox: 'false'
            property_dropdown: choice_b
            property_multiple_checkboxes: chocolate;strawberry
      example:
        properties:
          email: bcooper@biglytics.net
          phone: (877) 929-0687
          company: Biglytics
          website: biglytics.net
          lastname: Cooper
          firstname: Bryan
        associations: [ ]
    CollectionResponseSimplePublicObjectWithAssociationsForwardPaging:
      required:
        - results
      type: object
      properties:
        paging:
          $ref: '#/components/schemas/ForwardPaging'
        results:
          type: array
          items:
            $ref: '#/components/schemas/SimplePublicObjectWithAssociations'
    AssociationSpec:
      type: object
      properties:
        associationCategory:
          type: string
          enum:
            - HUBSPOT_DEFINED
            - USER_DEFINED
            - INTEGRATOR_DEFINED
        associationTypeId:
          type: integer
          format: int32
    PublicMergeInput:
      required:
        - objectIdToMerge
        - primaryObjectId
      type: object
      properties:
        objectIdToMerge:
          type: string
        primaryObjectId:
          type: string
    SimplePublicObjectWithAssociations:
      required:
        - createdAt
        - id
        - properties
        - updatedAt
      type: object
      properties:
        associations:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/CollectionResponseAssociatedId'
        createdAt:
          type: string
          format: date-time
        archived:
          type: boolean
        archivedAt:
          type: string
          format: date-time
        propertiesWithHistory:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/ValueWithTimestamp'
        id:
          type: string
        properties:
          type: object
          additionalProperties:
            type: string
            nullable: true
        updatedAt:
          type: string
          format: date-time
      example:
        properties:
          company: Biglytics
          createdate: '2019-10-30T03:30:17.883Z'
          email: bcooper@biglytics.net
          firstname: Bryan
          lastmodifieddate: '2019-12-07T16:50:06.678Z'
          lastname: Cooper
          phone: (877) 929-0687
          website: biglytics.net
    Filter:
      required:
        - operator
        - propertyName
      type: object
      properties:
        highValue:
          type: string
        propertyName:
          type: string
        values:
          type: array
          items:
            type: string
        value:
          type: string
        operator:
          type: string
          description: 'null'
          enum:
            - EQ
            - NEQ
            - LT
            - LTE
            - GT
            - GTE
            - BETWEEN
            - IN
            - NOT_IN
            - HAS_PROPERTY
            - NOT_HAS_PROPERTY
            - CONTAINS_TOKEN
            - NOT_CONTAINS_TOKEN
    BatchInputSimplePublicObjectBatchInput:
      required:
        - inputs
      type: object
      properties:
        inputs:
          type: array
          items:
            $ref: '#/components/schemas/SimplePublicObjectBatchInput'
    BatchInputSimplePublicObjectInputForCreate:
      required:
        - inputs
      type: object
      properties:
        inputs:
          type: array
          items:
            $ref: '#/components/schemas/SimplePublicObjectInputForCreate'
    PreviousPage:
      required:
        - before
      type: object
      properties:
        before:
          type: string
        link:
          type: string
    SimplePublicObjectBatchInput:
      required:
        - id
        - properties
      type: object
      properties:
        idProperty:
          type: string
          example: my_unique_property_name
        id:
          type: string
        properties:
          type: object
          additionalProperties:
            type: string
      example:
        id: '1'
        properties:
          email: bcooper@biglytics.net
          phone: (877) 929-0687
          company: Biglytics
          website: biglytics.net
          lastname: Cooper
          firstname: Bryan
    AssociatedId:
      required:
        - id
        - type
      type: object
      properties:
        id:
          type: string
        type:
          type: string
    NextPage:
      required:
        - after
      type: object
      properties:
        link:
          type: string
          example: '?after=NTI1Cg%3D%3D'
        after:
          type: string
          example: NTI1Cg%3D%3D
      example:
        after: NTI1Cg%3D%3D
        link: '?after=NTI1Cg%3D%3D'
    SimplePublicObjectInputForCreate:
      required:
        - properties
      type: object
      properties:
        associations:
          type: array
          items:
            $ref: '#/components/schemas/PublicAssociationsForObject'
        properties:
          type: object
          additionalProperties:
            type: string
      example:
        properties:
          email: bcooper@biglytics.net
          phone: (877) 929-0687
          company: Biglytics
          website: biglytics.net
          lastname: Cooper
          firstname: Bryan
        associations: [ ]

  responses:
    Error:
      description: An error occurred.
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/Error'
  securitySchemes:
    oauth2_legacy:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://app.hubspot.com/oauth/authorize
          tokenUrl: https://api.hubapi.com/oauth/v1/token
          scopes:
            crm.objects.custom.read: View custom object records
            tickets: Read and write tickets
            crm.objects.goals.read: Read goals
            media_bridge.read: Read media and media events
            crm.objects.custom.write: Change custom object records
            e-commerce: e-commerce

    oauth2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://app.hubspot.com/oauth/authorize
          tokenUrl: https://api.hubapi.com/oauth/v1/token
          scopes:
            crm.objects.companies.read: ''
            crm.objects.companies.write: ''
            crm.objects.contacts.read: ''
            crm.objects.contacts.write: ''
            crm.objects.deals.read: ''
            crm.objects.deals.write: ''

    private_apps_legacy:
      type: apiKey
      name: private-app-legacy
      in: header

    private_apps:
      type: apiKey
      name: private-app
      in: header

x-hubspot-available-client-libraries:
  - PHP
  - Node
  - Ruby
  - Python
x-hubspot-product-tier-requirements:
  marketing: FREE
  sales: FREE
  service: FREE
  cms: FREE
x-hubspot-documentation-banner: NONE